[["index.html", "Rのパッケージの活用 はじめに", " Rのパッケージの活用 Toshikazu Masumura 2023-01-08 はじめに "],["ggplot2.html", "Chapter 1 ggplot2の勧め 1.1 Rの作図環境の概要 1.2 ggplot2とは 1.3 ggplot2の利点 1.4 ggplot2の基本 1.5 facetを使おう 1.6 ggsave 1.7 文字化けへの対処(windows) 1.8 themeを少しだけ説明 1.9 参考書", " Chapter 1 ggplot2の勧め 1.1 Rの作図環境の概要 base(graphics) lattice grid ggplot2 1.2 ggplot2とは ggplot2は，tidy dataにしておけば，使いやすい 1.3 ggplot2の利点 1つのデータをもとに，ちょっとの変更で棒グラフ，散布図，などなど各種のplotが可能 図が綺麗で，テーマの変更も簡単 facetによるグループ分けも便利 magrittrとの相性も良い． 特にファイル名を設定するときの%$%や%T%など ggplot2をサポートするライブラリも豊富 凡例の自動的な位置決めや配置など ggpubrなども 1.4 ggplot2の基本 irisを例にするが，できれば，veganとかdaveのデータを使う tidy dataへの変換が必要 コードのみか，詳しくは松村や比嘉の解説を参考に aesthetics geom_point() geom_bar() aes() colour group size 1.5 facetを使おう forループやsubset，あるいはdplyr::filterを使っていたものが，一気にできて便利 コードも簡単で見やすい 1.6 ggsave 1.7 文字化けへの対処(windows) 1.8 themeを少しだけ説明 1.9 参考書 ggplot2 ggplot2のレシピ unwin GDA チートシート "],["magrittr.html", "Chapter 2 magrritrの勧め 2.1 tidyverseとmagrittr 2.2 %&gt;%とその仲間 2.3 %&lt;&gt;% 2.4 %T&gt;% 2.5 %$%", " Chapter 2 magrritrの勧め 2.1 tidyverseとmagrittr tidyverseは，Rでのデータ解析には欠かせないものになっている． そこで，Rを起動時にtidyverseを読み込む人は多いだろう． なお，tidyverseは1つのライブラリではなく，複数のライブラリからなる． library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✔ ggplot2 3.3.6 ✔ purrr 0.3.4 ## ✔ tibble 3.1.8 ✔ dplyr 1.0.10 ## ✔ tidyr 1.2.1 ✔ stringr 1.4.1 ## ✔ readr 2.1.2 ✔ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() これらのライブラリの多く(forcats，tibble，stringr，dplyr，tidyr，purrr)で，%&gt;% (パイプ)を使うことができる． 私は%&gt;%がtidyverse独自のものだと勘違いをしていた． しかし，%&gt;%はもとはライブラリmagrittrの関数であり，そこからインポートされている． そのため，tidyverseを読み込むと使うことができる． %&gt;%は，慣れるまでは何が便利なのか分からないが，慣れると欠かせなくなる． さらに使っていると，癖なってしまって無駄にパイプを繋ぐこともある． 長過ぎるパイプは良くないのは当然であるものの，適度に使うとRでのプログラミングは非常に楽になる． tidyverseの関数では，引数とするオブジェクトが統一されている． 具体的には，第1引数のオブジェクトがデータフレームやtibbleになっていることが多い． そのため，パイプと相性が特に良い． 2.2 %&gt;%とその仲間 %&gt;%の仲間としては，以下の関数もある． %&lt;&gt;% %T&gt;% %$% これらの関数は，tidyverseには含まれていないため，使用するにはmagrittrを読み込む必要がある． library(magrittr) ## ## Attaching package: &#39;magrittr&#39; ## The following object is masked from &#39;package:purrr&#39;: ## ## set_names ## The following object is masked from &#39;package:tidyr&#39;: ## ## extract 2.3 %&lt;&gt;% 2.3.1 使い方 %&lt;&gt;%は，パイプを使って処理した内容を，最初のオブジェクトに再度代入するときに使う． ほんの少しだけだが，コードを短くできる． mpg # 燃費データ ## # A tibble: 234 × 11 ## manufacturer model displ year cyl trans drv cty hwy fl class ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto… f 18 29 p comp… ## 2 audi a4 1.8 1999 4 manu… f 21 29 p comp… ## 3 audi a4 2 2008 4 manu… f 20 31 p comp… ## 4 audi a4 2 2008 4 auto… f 21 30 p comp… ## 5 audi a4 2.8 1999 6 auto… f 16 26 p comp… ## 6 audi a4 2.8 1999 6 manu… f 18 26 p comp… ## 7 audi a4 3.1 2008 6 auto… f 18 27 p comp… ## 8 audi a4 quattro 1.8 1999 4 manu… 4 18 26 p comp… ## 9 audi a4 quattro 1.8 1999 4 auto… 4 16 25 p comp… ## 10 audi a4 quattro 2 2008 4 manu… 4 20 28 p comp… ## # … with 224 more rows tmp &lt;- mpg tmp &lt;- tmp %&gt;% dplyr::filter(year==1999) %&gt;% tidyr::separate(trans, into=c(&quot;trans1&quot;, &quot;trans2&quot;, NA)) %&gt;% print() ## # A tibble: 117 × 12 ## manufac…¹ model displ year cyl trans1 trans2 drv cty hwy fl class ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto l5 f 18 29 p comp… ## 2 audi a4 1.8 1999 4 manual m5 f 21 29 p comp… ## 3 audi a4 2.8 1999 6 auto l5 f 16 26 p comp… ## 4 audi a4 2.8 1999 6 manual m5 f 18 26 p comp… ## 5 audi a4 q… 1.8 1999 4 manual m5 4 18 26 p comp… ## 6 audi a4 q… 1.8 1999 4 auto l5 4 16 25 p comp… ## 7 audi a4 q… 2.8 1999 6 auto l5 4 15 25 p comp… ## 8 audi a4 q… 2.8 1999 6 manual m5 4 17 25 p comp… ## 9 audi a6 q… 2.8 1999 6 auto l5 4 15 24 p mids… ## 10 chevrolet c150… 5.7 1999 8 auto l4 r 13 17 r suv ## # … with 107 more rows, and abbreviated variable name ¹​manufacturer tmp &lt;- mpg tmp %&lt;&gt;% dplyr::filter(year==1999) %&gt;% tidyr::separate(trans, into=c(&quot;trans1&quot;, &quot;trans2&quot;, NA)) %&gt;% print() ## # A tibble: 117 × 12 ## manufac…¹ model displ year cyl trans1 trans2 drv cty hwy fl class ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto l5 f 18 29 p comp… ## 2 audi a4 1.8 1999 4 manual m5 f 21 29 p comp… ## 3 audi a4 2.8 1999 6 auto l5 f 16 26 p comp… ## 4 audi a4 2.8 1999 6 manual m5 f 18 26 p comp… ## 5 audi a4 q… 1.8 1999 4 manual m5 4 18 26 p comp… ## 6 audi a4 q… 1.8 1999 4 auto l5 4 16 25 p comp… ## 7 audi a4 q… 2.8 1999 6 auto l5 4 15 25 p comp… ## 8 audi a4 q… 2.8 1999 6 manual m5 4 17 25 p comp… ## 9 audi a6 q… 2.8 1999 6 auto l5 4 15 24 p mids… ## 10 chevrolet c150… 5.7 1999 8 auto l4 r 13 17 r suv ## # … with 107 more rows, and abbreviated variable name ¹​manufacturer 2.3.2 注意点 試行錯誤でコードを書いている途中は，あまり使わないほうが良いだろう． もとのオブジェクトが置き換わるので，処理結果が求めるものでないときに，もとに戻れないためである． 2.4 %T&gt;% 2.4.1 使い方 処理途中に分岐をして別の処理をさせたいときに使う． mpg # 燃費データ ## # A tibble: 234 × 11 ## manufacturer model displ year cyl trans drv cty hwy fl class ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto… f 18 29 p comp… ## 2 audi a4 1.8 1999 4 manu… f 21 29 p comp… ## 3 audi a4 2 2008 4 manu… f 20 31 p comp… ## 4 audi a4 2 2008 4 auto… f 21 30 p comp… ## 5 audi a4 2.8 1999 6 auto… f 16 26 p comp… ## 6 audi a4 2.8 1999 6 manu… f 18 26 p comp… ## 7 audi a4 3.1 2008 6 auto… f 18 27 p comp… ## 8 audi a4 quattro 1.8 1999 4 manu… 4 18 26 p comp… ## 9 audi a4 quattro 1.8 1999 4 auto… 4 16 25 p comp… ## 10 audi a4 quattro 2 2008 4 manu… 4 20 28 p comp… ## # … with 224 more rows 2.4.2 注意点 分岐途中の結果をオブジェクトに代入するときには，&lt;-ではなく，&lt;&lt;-を使用する． 2.5 %$% 2.5.1 使い方 2.5.2 注意点 "],["rvest.html", "Chapter 3 rvestでスクレイピング 3.1 スクレイピング 3.2 rvest と RSelenium 3.3 rvestのできること 3.4 準備 3.5 HTMLの取得 3.6 DOMの取得", " Chapter 3 rvestでスクレイピング 3.1 スクレイピング ここでのスクレイピングとは，ウェブスクレイピングの省略のことで，ウェブサイトにある情報を収集することである． ウェブサイトから植生調査データを収集することはほとんどないものの，関連データの収集は可能である． 例えば，気象庁のページから気象データが収集可能である． もちろん，気象データは手動でも収集可能ではあるが，多大な手間と長い時間が必要である． ここでは，ウェブでの情報収集の方法とRのパッケージ作成の方法を紹介することを目的とする． ウェブでの情報収集にはRのパッケージであるrvestを用いる． さらに，rvestを用いて気象庁のページから世界の気象データを入手して，気候ダイアグラムを描画する． Rのパッケージ作成では，rvestを用いて作成した関数と収集したデータをまとめたパッケージの作成方法を紹介する． 著者自身，他人のためにパッケージをつくることは考えておらず，基本的には自分の研究や作業のための関数をまとめることを目的としてパッケージをいくつか作成した． 作成したら，ついでに他人にも使ってもらえれば嬉しいという程度である． 過去に作成した関数は，しばらくすると関数の引数や返り値がどのようなものであったのか忘れてしまいがちである． パッケージをつくる(特にCRANに登録する)には，引数，返り値，使用例などをまとめる必要がある． きっちりまとめなくても良いのではあるが，決まった形式の方がむしろまとめやすい． また，RStudioとusethis, testthat, devtoolsなどのパッケージを使ってパッケージ開発すると，各種チェックやテストが可能である． 各種チェックやテストでたくさんのエラーを見ると，チェックやテストは正直なところ煩わしいと感じる． 特に，パケージ開発に慣れていないと特にそうである． しかし，チェックやテストをすることで，関数の完成度を確実に高めることができるため，パッケージとしてまとめる利点である． 3.2 rvest と RSelenium スクレイピングをするために使われる主なRのパッケージとしては，rvestとRSeleniumがある． rvestは，静的なサイトを対象とするときに役立つ． つまり，URLを指定すれば対象のサイトのページが決まるときである． 気象庁での気象データを提供しているページがこれに当たる． 一方，RSeleniumは動的なサイトを対象とするときに役立つ． 例えば，テキストボックスへのデータ入力やプルダウンメニューの選択あるいはその後のマウス操作でページが遷移する場合である． このような動的なサイトでは，Seleniumだけでなく，Javascriptを部分的に用いるのも効果的である． なお，rvestでもユーザ名とパスワードを用いた一般的なログインは可能である． また，politeパッケージと組み合わせることである程度の動的なサイトのスクレイピングは可能である． 3.3 rvestのできること HTMLの取得 DOMの取得: id, class, tagNameなどを用いる tableの取得 HTML内の取得したいデータはtableにあることが多いため，非常に便利 そもそも，tableでないデータを取得するのは非常に不便 リンクの取得 ページ遷移に使用する stringrと組み合わせて使うと良い 文字コードの変換にはstringiを用いる 3.4 準備 # install.packages(&quot;rvest&quot;) # library(rvest) 3.5 HTMLの取得 3.5.1 使い方 3.5.2 注意点 3.6 DOMの取得 3.6.1 使い方 3.6.2 注意点 "],["rselenium.html", "Chapter 4 Rselenium 4.1 準備 4.2 ブラウザの自動化 4.3 4.4 要素の取得 4.5 その他", " Chapter 4 Rselenium 4.1 準備 RSelenium: CRANからインストール Selenium: 本家サイトからインストール 注意: ver3.xxx をインストールする ver4.0 以上はRSeleniumuが対応していない(Pythonなら可) ChromeDriver 注意: 自身の利用しているブラウザのドライバが必要(バージョンも合致する必要あり) GoogleChromeは自動的にupdateされるので，バージョンをよく確認する 通常は，安定版の最新版で大丈夫である Seleniumと同じフォルダに保存する 4.2 ブラウザの自動化 4.3 4.3.1 使い方 4.3.2 注意点 4.4 要素の取得 idがわかるとき document.getElementByID() xpath document.selectQueryAll()[] 動的にサイトが作られているときには，変化する可能性があるので注意 使用されているJavaScriptの関数がわかる script &lt;- “” rem$excute(script) 例 BiSSの文字サイズの変更 主命リストの列数の変更 スクレイピングの実行時には，適切な時間間隔を空ける - 通常は5秒以上を求めていることが多い ページ遷移の命令を送信後，十分な間隔がないとHTMLの要素を取得しきれていないことがある 極端な場合，サーバーからの情報がほとんど何も送られていない，つまりページの内容がほとんど何もないことにある． この状況は，通常のマウス操作では何も表示されていないところをクリックするのと同じ状態である． サーバからの情報を待つ意味でも適度な間隔を空けるのが望ましい 動的なサイトの場合は，HTMLの構成中の可能性もある ログイン等のページでも，遷移途中のことがある． 4.5 その他 Rからシェルのコマンドを使う pngからPDFへ変換 ファイルの移動 Seleniumuの起動・終了 MeCabやGINZAの実行 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
