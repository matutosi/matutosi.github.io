[["index.html", "Rにる作業の自動化・効率化 -各種パッケージの活用方法- はじめに", " Rにる作業の自動化・効率化 -各種パッケージの活用方法- Toshikazu Masumura 2023-04-25 はじめに 誰でもそうだろうが，面倒くさい仕事はしたくない． というか，したくないことが面倒くさいのだろう． ニワトリかタマゴのような話は別として，できることなら，面倒な作業は自動化したい． もちろんすべての仕事を自動化できるわけでもないし，文章執筆のように作業内容によっては自動化すべきでないこともある． 作業の自動化には，プログラミング言語を使うことが多い． 自動化でよく使われる言語としては，Pythonがある． Pythonは比較的習得しやすい言語らしく，多くの人が使っている． 自分自身も多少はPythonを使えるものの，それよりもRの方が慣れている． できることなら(ほぼ)全ての作業をRでやってしまいたい． そんなわけで，この文章ではRを使った作業の自動化や効率化方法を紹介する． 基本的に独学でここまで来たので，我流のスクリプトや汚いコードが多くあると思われるがご容赦頂きたい． また，改善案をご教示いただければありがたい． matutosi@gmail.com "],["install.html", "Chap. 1 Rのインストール 1.1 ダウンロード 1.2 インストーラの起動 1.3 インストール完了", " Chap. 1 Rのインストール Rのインストール方法は，ネットでも多く掲載されている． ここでは，オプションの個人的な好みを強調しつつ説明する． 1.1 ダウンロード OSに合わせたインストーラをダウンロードする． Windowsの場合は，「Download R-4.x.x for Windows」(xはバージョンで異なる)をダウンロード． https://cran.r-project.org/bin/windows/base/ 1.2 インストーラの起動 ダウンロードしたファイルをクリック． 「…許可しますか?」に対して，「はい」を選択． インストール中に使用する言語 何でも大丈夫なので，好きなものを選ぶ． インストールの確認 「次へ」をクリック． インストール先のフォルダ そのままでOK．好みがあれば変更する． インストールするもの とりあえず，すべてチェックしておくくと良い． Message translationは，Rからのメッセージを日本語に翻訳するかどうか． チェックを入れないと，英語のみの表示． 結論としえは，とりあえずチェックを入れておき，必要に応じて英語で表示させるという方法が良いかもしれない． チェックを入れておくと，エラーメッセージなどを日本語で表示させることができる． 「そら日本語のほうが良いやん」と思うかもしれない． よくわからないエラーメッセージがしかも英語で表示されたら，わけがわからないからです． ただ，プログラミングの世界では，英語でのエラーメッセージのほうが便利なことが結構ある． それは，エラーメッセージをそのままネットで検索するときである． 日本語でのエラーメッセージだとネット上の情報が限られる． 一方，英語でのエラーメッセージで検索すると，原因や対処方法をかなりの確率で知ることができる． # https://cell-innovation.nig.ac.jp/SurfWiki/R_errormes_lang.html Sys.getenv(&quot;LANGUAGE&quot;) # 設定の確認 # 設定の変更方法 Sys.setenv(LANGUAGE=&quot;en&quot;) # 英語に変更 Sys.setenv(LANGUAGE=&quot;jp&quot;) # 日本語に変更 オプションの選択 とりあえず「Yes」を選択． 以下のオプションを選択するかどうか． ウィンドウの表示方法(MDI / SDI)の選択 個人的な好みはSDIですが，好みの問題ですので正直どちらでも大丈夫． MDI(左)は大きな1つのWindowの中に，コンソール(プログラムの入力部分)，グラフ，ヘルプなどが表示される． SDI(右)はコンソール，グラフ，ヘルプが別々のWindowとして表示される． どちらかといえば，自由度が高い． ヘルプの表示方法(Plain text / HTML help)の選択 個人的な好みはPlain textだが，好みの問題で正直どちらでも構わない． Plain textはテキストファイルで表示されるシンプルな作り． HTML helpはヘルプがブラウザ(GoogleChrome等)で表示される． 関連する関数などへのリンクが表示されるので，それらを参照するのは便利． その後の設定 その他は，既定値(そのまま)でOK． 1.3 インストール完了 インストールが完了すると，アイコンがデスクトップに表示される． アイコンをクリックすると，Rが起動する． "],["package.html", "Chap. 2 パッケージのインストール 2.1 CRANから 2.2 GitHubから", " Chap. 2 パッケージのインストール R単体でも多くの機能があるものの，実際には各種パッケージを利用することが多い． パッケージのインストールするには，Rで簡単なコマンドを実行するだけである． 2.1 CRANから CRANは，Rの総本山である． https://cran.r-project.org/ R本体だけでなく，各種パッケージが公開されている． https://cran.r-project.org/web/packages/available_packages_by_name.html CRANに掲載されており，パッケージの名前がわかっていたら，以下のようにすればインストールできる． # ミラーサイト(ダウンロード元)の設定 options(repos = &quot;https://cran.ism.ac.jp/&quot;) # 1つの場合 install.packages(&quot;tidyverse&quot;) # 複数の場合 pkg &lt;- c(&quot;xlsx&quot;, &quot;magrittr&quot;, &quot;devtools&quot;) install.packages(pkg) 実行すると，ファイルをダウンロードし，成功(あるいは失敗)したことが表示される． 2.2 GitHubから たいていはCRANに登録されているが，GitHubにしかないパッケージもある． その場合には，以下のようにする． install.packages(&quot;devtools&quot;) devtools::install_github(&quot;matutosi/ecan&quot;) "],["sf.html", "Chap. 3 sfでファイル操作 3.1 はじめに 3.2 shell, baseパッケージ, fsパッケージ 3.3 準備 3.4 sfの関数群 (WIP) 3.5 sfを使ったファイル操作例", " Chap. 3 sfでファイル操作 3.1 はじめに Windowsならコマンドプロンプト(古い言い方なら，いわゆるdos窓)，MacならTerminal，Linuxならシェルを使えば，各種ファイル操作をコマンドラインで実行できる． もちろん，マウスを使った操作でも構わないが，多くのファイルでの名前の変更やファイル名によるフォルダの振り分けなら，マウス操作よりもコマンドを使った操作が早いし確実である． なお，Windowsの場合は [Win] + [R] で「ファイル名を指定して実行」で「cmd」と入力すれば， コマンドプロンプトやバッチファイル(あるいはシェルスクリプト)などでの操作に慣れていれば，それが便利である． ただ，dosコマンドの変数の扱いは，慣れていないと結構難しい(慣れていても?)． そんなときは，Rの関数(shell()，system())を使って，dosコマンドを駆使して，ファイル名を取得・名前の変更をすることができる． 既にdosコマンドを書いていれば，shell()などを使うのは良い方法である． また，Rのbaseパッケージにはファイル操作のための関数が多くある． 例えば，list.files()でファイル名一覧を取得でき，file.rename()でファイル名の変更ができる． しかし，baseの関数群の中には名前が分かりにくい点や引数の一貫性が無い点などの難点がある． これは，Rが発展していく中で徐々に関数が追加されたことによるようだ． sfパッケージでは，baseの関数群を整理するとともに，新たな有用な関数が追加されている． そのため，命名規則が一貫しており，ベクトル化した引数を受け付けるため，非常に使いやすい． なお，fs，base，shellの詳細な比較が，以下のURLにあるので，参照してほしい． https://cran.r-project.org/web/packages/fs/vignettes/function-comparisons.html 3.2 shell, baseパッケージ, fsパッケージ ファイル名を変更したいとする． a.pdfを01.pdfに，b.pdfを02.pdfにのように10個のファイル名を変更する． 3.2.1 shell shellなら，以下のようなコマンドだ． dosコマンドの変数やループなどを駆使すると，もっと短く書けるのかもしれないが，残念ながらそのような知識がない． テキストファイルで書いてもそれほど時間がからないだろうが，ファイル数が多くなれば大変だ． rename a.pdf 01.pdf rename b.pdf 02.pdf rename c.pdf 03.pdf ... rename j.pdf 10.pdf 3.2.2 baseパッケージ 基本的にtidyverseの関数群を使わず，できるだけRの標準の関数を使った例を示す． sprintf()は使い慣れていないと，どのように指定するべきか分かりにくい． old &lt;- paste0(letters[1:10], &quot;.pdf&quot;) new &lt;- paste0(sprintf(&quot;%02.f&quot;, 1:10), &quot;.pdf&quot;) file.rename(old, new) 3.2.3 fsパッケージ fsパッケージとともに，stringrを使った例を示す． ファイル操作をする際には，文字列の置換・検索などをすることが多いので，stringrが役立つ． stringrパッケージの関数は，str_の名前になっているため，覚えやすい． fsパッケージの関数は，ファイル操作はfile_，ディレクトリ操作はdir_，パス操作はpath_という名前がついている． library(stringr) old &lt;- str_c(letters[1:10], &quot;.pdf&quot;) new &lt;- str_c(str_pad(1:10, width = 2, side = &quot;left&quot;, pad = &quot;0&quot;), &quot;.pdf&quot;) file_move(old, new) 3.3 準備 install.packages(&quot;sf&quot;) ## package &#39;sf&#39; successfully unpacked and MD5 sums checked ## ## The downloaded binary packages are in ## C:\\Users\\matu\\AppData\\Local\\Temp\\RtmpcFNuJG\\downloaded_packages library(sf) ## Linking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE 3.4 sfの関数群 (WIP) ディレクトリ操作(一覧，移動，複製，削除など) dir_ls(“path”) dir_info(“path”) dir_copy(“path”, “new-path”) dir_create(“path”) dir_delete(“path”) dir_exists(“path”) dir_move() (see file_move) dir_map(“path”, fun) dir_tree(“path”) File functions ファイル操作(移動，複製，削除など) file_chmod(“path”, “mode”) file_chown(“path”, “user_id”, “group_id”) file_copy(“path”, “new-path”) file_create(“new-path”) file_delete(“path”) file_exists(“path”) file_info(“path”) file_move(“path”, “new-path”) file_show(“path”) file_touch() file_temp() file_test() パス操作 path(“top_dir”, “nested_dir”, “file”, ext = “ext”) path_temp(), path_temp(“path”) path_expand(“~/path”) path_dir(“path”) path_file(“path”) path_home() path_package(“pkgname”, “dir”, “file”) path_norm(“path”) path_real(“path”) path_rel(“path/foo”, “path/bar”) path_common(c(“path/foo”, “path/bar”, “path/baz”)) path_ext_remove(“path”) path_ext_set(“path”, “new_ext”) path_sanitize(“path”) 3.5 sfを使ったファイル操作例 ごく個人的なことだが，Rのバージョンアップ時にはRconsoleとRProfile.siteを古いバージョンから複製して，カスタマイズした設定を引き継いでいる． バージョンアップをそれほど頻繁にしないのであれば，手作業でコピーしてもそれほど問題はない． 普通のRユーザなら常に最新版を使わなくても良い． ただ，Rパッケージの開発をしていると，開発中のパッケージが依存しているパッケージが最新版のRで開発されている旨の警告がでることが結構ある． ごく最近までは，手作業でファイルをコピーしていたが，よく考えたらこういった作業は自動化するべきだと気づいた． そこで，sfパッケージ(とstringr)を使ってファイルをコピーするスクリプトを作成した． # Script to copy Rconsole for updating R # RをバージョンアップしたときのRconsoleの複製スクリプト # https://gist.github.com/matutosi/6dab3918402662f081be5c17cc7f9ce2 library(fs) library(stringr) wd &lt;- str_replace(R.home(), &quot;R-([0-9]\\\\.*){3}&quot;, &quot;&quot;) setwd(wd) dir &lt;- dir_ls() d_old &lt;- dir[length(dir)-1] d_new &lt;- dir[length(dir)] files &lt;- c(&quot;Rconsole&quot;, &quot;Rprofile.site&quot;) f_old &lt;- path(d_old, &quot;etc&quot;, files) f_new &lt;- path(d_new, &quot;etc&quot;) file_copy(f_old, f_new, overwrite = TRUE) このように，定期的あるいはバージョンアップなどに伴うファイルのコピーや移動はそれなりにあるように思う． そのような場合は，fsとstringrを組み合わせて，作業を自動化するとよいだろう． "],["assoc.html", "Chap. 4 スクリプトの関連付け", " Chap. 4 スクリプトの関連付け Rのプログラムのファイルは拡張子「script.R」のように「R」という拡張子を付けて保存することが多い． 「.docx」をワードで，「.xlsx」をエクセルで開くのと同様に，私は「*．R」をテキストエディタで開くするように設定している． その後，開いたファイルをRのコンソールに貼り付けて，プログラムを実行する． このような使い方でもちろん良いのだが，内容を変更しないのであれば面倒臭い． つまり，ファイルをクリックするだけで，プログラムが実行されれば便利である． プログラムをRに関連付けれることで，これが実現できる． プログラムのファイル名を「.R」から「.scr」に変更する(「scr」は大文字小文字は関係なく，「Rsc」や「RSC」などでもOK)． 拡張子が表示されていない場合は，エクスプローラの表示のオプションで，「登録されている拡張子は表示しない」のチェックを外して(チェックしないで)，「OK」を選択してから，名前を変更する． ファイルを右クリックして，「プロパティ」を選択． 「全般」タブのやや上にあるプログラムの「変更」を選択． 「PCでアプリを選択する」をクリック． ファイル選択画面で，Rをインストールしたフォルダまで辿っていき(「c:\\Program files\\R\\R-4.2.3\\bin\\x64」など)，「Rscript.exe」を選択する． 「.rscファイルの既定のアプリを選択する」で「R for windows front-end」が表示されるので，「既定値を設定する」を選択． 全般タブのプログラムが「R for windows front-end」になっていることを確認して．「OK」を選択． ファイルのアイコンがRのアイコンになっていたらOK． ダブルクリックすると，ファイルの内容が実行される(はず)． "],["ggplot2.html", "Chap. 5 ggplot2の勧め 5.1 Rの作図環境の概要 5.2 ggplot2とは 5.3 ggplot2の利点 5.4 ggplot2の基本 5.5 facetを使おう 5.6 ggsave 5.7 文字化けへの対処(windows) 5.8 themeを少しだけ説明 5.9 shiny 5.10 参考書", " Chap. 5 ggplot2の勧め 5.1 Rの作図環境の概要 base(graphics) lattice grid ggplot2 5.2 ggplot2とは ggplot2は，tidy dataにしておけば，使いやすい 5.3 ggplot2の利点 1つのデータをもとに，ちょっとの変更で棒グラフ，散布図，などなど各種のplotが可能 図が綺麗で，テーマの変更も簡単 facetによるグループ分けも便利 magrittrとの相性も良い． 特にファイル名を設定するときの%$%や%T%など ggplot2をサポートするライブラリも豊富 凡例の自動的な位置決めや配置など ggpubrなども 5.4 ggplot2の基本 irisを例にするが，できれば，veganとかdaveのデータを使う tidy dataへの変換が必要 コードのみか，詳しくは松村や比嘉の解説を参考に gather()とspread()はpivot_longer()とpivot_wider()になって使いやすくなった． Hadley自身も使い方を混乱していたらしい aesthetics geom_point() geom_bar() aes() colour group size 5.5 facetを使おう forループやsubset，あるいはdplyr::filterを使っていたものが，一気にできて便利 コードも簡単で見やすい コードの転用が簡単 group VS facet 5.6 ggsave pngとPDF PDFで日本語文字が化ける場合は，pngを使う 指定しないと，直前のプロット 5.7 文字化けへの対処(windows) -cario? 5.8 themeを少しだけ説明 デフォルト theme_bw() 5.9 shiny Rだけでウェブアプリが作れる reactiveの考え方を覚える必要あり 5.10 参考書 ggplot2 ggplot2のレシピ unwin GDA チートシート "],["magrittr.html", "Chap. 6 magrritrの勧め 6.1 tidyverseとmagrittr 6.2 %&gt;%とその仲間 6.3 %&lt;&gt;% 6.4 %T&gt;% 6.5 %$%", " Chap. 6 magrritrの勧め 6.1 tidyverseとmagrittr tidyverseは，Rでのデータ解析には欠かせないものになっている． そこで，Rを起動時にtidyverseを読み込む人は多いだろう． なお，tidyverseは1つのライブラリではなく，複数のライブラリからなる． library(tidyverse) これらのライブラリの多く(forcats，tibble，stringr，dplyr，tidyr，purrr)で，%&gt;% (パイプ)を使うことができる． 私は%&gt;%がtidyverse独自のものだと勘違いをしていた． しかし，%&gt;%はもとはライブラリmagrittrの関数であり，そこからインポートされている． そのため，tidyverseを読み込むと使うことができる． %&gt;%は，慣れるまでは何が便利なのか分からないが，慣れると欠かせなくなる． さらに使っていると，癖なってしまって無駄にパイプを繋ぐこともある． 長過ぎるパイプは良くないのは当然であるものの，適度に使うとRでのプログラミングは非常に楽になる． tidyverseの関数では，引数とするオブジェクトが統一されている． 具体的には，第1引数のオブジェクトがデータフレームやtibbleになっていることが多い． そのため，パイプと相性が特に良い． 6.2 %&gt;%とその仲間 %&gt;%の仲間としては，以下の関数もある． %&lt;&gt;% %T&gt;% %$% これらの関数は，tidyverseには含まれていないため，使用するにはmagrittrを読み込む必要がある． library(magrittr) ## ## Attaching package: &#39;magrittr&#39; ## The following object is masked from &#39;package:purrr&#39;: ## ## set_names ## The following object is masked from &#39;package:tidyr&#39;: ## ## extract 6.3 %&lt;&gt;% 6.3.1 使い方 %&lt;&gt;%は，パイプを使って処理した内容を，最初のオブジェクトに再度代入するときに使う． ほんの少しだけ，コードを短くできる． mpg # 燃費データ ## # A tibble: 234 × 11 ## manufacturer model displ year cyl trans drv cty hwy fl class ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto… f 18 29 p comp… ## 2 audi a4 1.8 1999 4 manu… f 21 29 p comp… ## 3 audi a4 2 2008 4 manu… f 20 31 p comp… ## 4 audi a4 2 2008 4 auto… f 21 30 p comp… ## 5 audi a4 2.8 1999 6 auto… f 16 26 p comp… ## 6 audi a4 2.8 1999 6 manu… f 18 26 p comp… ## 7 audi a4 3.1 2008 6 auto… f 18 27 p comp… ## 8 audi a4 quattro 1.8 1999 4 manu… 4 18 26 p comp… ## 9 audi a4 quattro 1.8 1999 4 auto… 4 16 25 p comp… ## 10 audi a4 quattro 2 2008 4 manu… 4 20 28 p comp… ## # ℹ 224 more rows tmp &lt;- mpg tmp &lt;- tmp %&gt;% dplyr::filter(year==1999) %&gt;% tidyr::separate(trans, into=c(&quot;trans1&quot;, &quot;trans2&quot;, NA)) %&gt;% print() ## # A tibble: 117 × 12 ## manufacturer model displ year cyl trans1 trans2 drv cty hwy fl ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto l5 f 18 29 p ## 2 audi a4 1.8 1999 4 manual m5 f 21 29 p ## 3 audi a4 2.8 1999 6 auto l5 f 16 26 p ## 4 audi a4 2.8 1999 6 manual m5 f 18 26 p ## 5 audi a4 quat… 1.8 1999 4 manual m5 4 18 26 p ## 6 audi a4 quat… 1.8 1999 4 auto l5 4 16 25 p ## 7 audi a4 quat… 2.8 1999 6 auto l5 4 15 25 p ## 8 audi a4 quat… 2.8 1999 6 manual m5 4 17 25 p ## 9 audi a6 quat… 2.8 1999 6 auto l5 4 15 24 p ## 10 chevrolet c1500 s… 5.7 1999 8 auto l4 r 13 17 r ## # ℹ 107 more rows ## # ℹ 1 more variable: class &lt;chr&gt; tmp &lt;- mpg tmp %&lt;&gt;% dplyr::filter(year==1999) %&gt;% tidyr::separate(trans, into=c(&quot;trans1&quot;, &quot;trans2&quot;, NA)) %&gt;% print() ## # A tibble: 117 × 12 ## manufacturer model displ year cyl trans1 trans2 drv cty hwy fl ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto l5 f 18 29 p ## 2 audi a4 1.8 1999 4 manual m5 f 21 29 p ## 3 audi a4 2.8 1999 6 auto l5 f 16 26 p ## 4 audi a4 2.8 1999 6 manual m5 f 18 26 p ## 5 audi a4 quat… 1.8 1999 4 manual m5 4 18 26 p ## 6 audi a4 quat… 1.8 1999 4 auto l5 4 16 25 p ## 7 audi a4 quat… 2.8 1999 6 auto l5 4 15 25 p ## 8 audi a4 quat… 2.8 1999 6 manual m5 4 17 25 p ## 9 audi a6 quat… 2.8 1999 6 auto l5 4 15 24 p ## 10 chevrolet c1500 s… 5.7 1999 8 auto l4 r 13 17 r ## # ℹ 107 more rows ## # ℹ 1 more variable: class &lt;chr&gt; 6.3.2 注意点 試行錯誤でコードを書いている途中は，あまり使わないほうが良いだろう． もとのオブジェクトが置き換わるので，処理結果が求めるものでないときに，もとに戻れないためである． 6.4 %T&gt;% 6.4.1 使い方 処理途中に分岐をして別の処理をさせたいときに使う． ちょっとだけ処理して，変数に保存するとき imapと組み合わせると便利かも 画像を保存するファイル名の設定とか mpg # 燃費データ ## # A tibble: 234 × 11 ## manufacturer model displ year cyl trans drv cty hwy fl class ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto… f 18 29 p comp… ## 2 audi a4 1.8 1999 4 manu… f 21 29 p comp… ## 3 audi a4 2 2008 4 manu… f 20 31 p comp… ## 4 audi a4 2 2008 4 auto… f 21 30 p comp… ## 5 audi a4 2.8 1999 6 auto… f 16 26 p comp… ## 6 audi a4 2.8 1999 6 manu… f 18 26 p comp… ## 7 audi a4 3.1 2008 6 auto… f 18 27 p comp… ## 8 audi a4 quattro 1.8 1999 4 manu… 4 18 26 p comp… ## 9 audi a4 quattro 1.8 1999 4 auto… 4 16 25 p comp… ## 10 audi a4 quattro 2 2008 4 manu… 4 20 28 p comp… ## # ℹ 224 more rows 6.4.2 注意点 分岐途中の結果をオブジェクトに代入するときには，&lt;-ではなく，&lt;&lt;-を使用する． 明示的に「.」を使う 複数処理があれば，「{}」で囲う 処理終了後に「%&gt;%」が必要 例のコードを示す # mpg %T&gt;% # { # tmp &lt;&lt;- dplyr::select(., ) # } %&gt;% 6.5 %$% 6.5.1 使い方 mpg %&gt;% .$manufacturer ## [1] &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ## [6] &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ## [11] &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ## [16] &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; ## [21] &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; ## [26] &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; ## [31] &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; ## [36] &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [41] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [46] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [51] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [56] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [61] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [66] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [71] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;ford&quot; ## [76] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; ## [81] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; ## [86] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; ## [91] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; ## [96] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;honda&quot; ## [101] &quot;honda&quot; &quot;honda&quot; &quot;honda&quot; &quot;honda&quot; &quot;honda&quot; ## [106] &quot;honda&quot; &quot;honda&quot; &quot;honda&quot; &quot;hyundai&quot; &quot;hyundai&quot; ## [111] &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; ## [116] &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; ## [121] &quot;hyundai&quot; &quot;hyundai&quot; &quot;jeep&quot; &quot;jeep&quot; &quot;jeep&quot; ## [126] &quot;jeep&quot; &quot;jeep&quot; &quot;jeep&quot; &quot;jeep&quot; &quot;jeep&quot; ## [131] &quot;land rover&quot; &quot;land rover&quot; &quot;land rover&quot; &quot;land rover&quot; &quot;lincoln&quot; ## [136] &quot;lincoln&quot; &quot;lincoln&quot; &quot;mercury&quot; &quot;mercury&quot; &quot;mercury&quot; ## [141] &quot;mercury&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; ## [146] &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; ## [151] &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;pontiac&quot; ## [156] &quot;pontiac&quot; &quot;pontiac&quot; &quot;pontiac&quot; &quot;pontiac&quot; &quot;subaru&quot; ## [161] &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; ## [166] &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; ## [171] &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;toyota&quot; &quot;toyota&quot; ## [176] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [181] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [186] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [191] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [196] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [201] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [206] &quot;toyota&quot; &quot;toyota&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [211] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [216] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [221] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [226] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [231] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; mpg %$% manufacturer ## [1] &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ## [6] &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ## [11] &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ## [16] &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; ## [21] &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; ## [26] &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; ## [31] &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;chevrolet&quot; ## [36] &quot;chevrolet&quot; &quot;chevrolet&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [41] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [46] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [51] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [56] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [61] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [66] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; ## [71] &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;dodge&quot; &quot;ford&quot; ## [76] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; ## [81] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; ## [86] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; ## [91] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; ## [96] &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;ford&quot; &quot;honda&quot; ## [101] &quot;honda&quot; &quot;honda&quot; &quot;honda&quot; &quot;honda&quot; &quot;honda&quot; ## [106] &quot;honda&quot; &quot;honda&quot; &quot;honda&quot; &quot;hyundai&quot; &quot;hyundai&quot; ## [111] &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; ## [116] &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; &quot;hyundai&quot; ## [121] &quot;hyundai&quot; &quot;hyundai&quot; &quot;jeep&quot; &quot;jeep&quot; &quot;jeep&quot; ## [126] &quot;jeep&quot; &quot;jeep&quot; &quot;jeep&quot; &quot;jeep&quot; &quot;jeep&quot; ## [131] &quot;land rover&quot; &quot;land rover&quot; &quot;land rover&quot; &quot;land rover&quot; &quot;lincoln&quot; ## [136] &quot;lincoln&quot; &quot;lincoln&quot; &quot;mercury&quot; &quot;mercury&quot; &quot;mercury&quot; ## [141] &quot;mercury&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; ## [146] &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; ## [151] &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;nissan&quot; &quot;pontiac&quot; ## [156] &quot;pontiac&quot; &quot;pontiac&quot; &quot;pontiac&quot; &quot;pontiac&quot; &quot;subaru&quot; ## [161] &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; ## [166] &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; ## [171] &quot;subaru&quot; &quot;subaru&quot; &quot;subaru&quot; &quot;toyota&quot; &quot;toyota&quot; ## [176] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [181] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [186] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [191] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [196] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [201] &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; &quot;toyota&quot; ## [206] &quot;toyota&quot; &quot;toyota&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [211] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [216] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [221] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [226] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; ## [231] &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; &quot;volkswagen&quot; 6.5.2 注意点 "],["rvest.html", "Chap. 7 rvestでスクレイピング 7.1 スクレイピング 7.2 rvest と RSelenium 7.3 rvestのできること 7.4 準備 7.5 HTMLの取得 7.6 DOMの取得", " Chap. 7 rvestでスクレイピング 7.1 スクレイピング ここでのスクレイピングとは，ウェブスクレイピングの省略のことで，ウェブサイトにある情報を収集することである． ウェブサイトから植生調査データを収集することはほとんどないものの，関連データの収集は可能である． 例えば，気象庁のページから気象データが収集可能である． もちろん，気象データは手動でも収集可能ではあるが，多大な手間と長い時間が必要である． 研究に必要なデータを自動で取得できれば，手間と時間の節約が可能である． そこで，本稿ではウェブでの情報収集の方法を紹介することを目的とする． 世界の各地点の気象データをプロット 情報収集にはRのパッケージであるrvestを用いる． rvestを用いて気象庁のページから世界の気象データを入手して，気候ダイアグラムを描画する． Rのパッケージ作成では，rvestを用いて作成した関数と収集したデータをまとめたパッケージの作成方法を紹介する． 著者自身，他人のためにパッケージをつくることは考えておらず，基本的には自分の研究や作業のための関数をまとめることを目的としてパッケージをいくつか作成した． 作成したら，ついでに他人にも使ってもらえれば嬉しいという程度である． 過去に作成した関数は，しばらくすると関数の引数や返り値がどのようなものであったのか忘れてしまいがちである． パッケージをつくる(特にCRANに登録する)には，引数，返り値，使用例などをまとめる必要がある． きっちりまとめなくても良いのではあるが，決まった形式の方がむしろまとめやすい． また，RStudioとusethis, testthat, devtoolsなどのパッケージを使ってパッケージ開発すると，各種チェックやテストが可能である． 各種チェックやテストでたくさんのエラーを見ると，チェックやテストは正直なところ煩わしいと感じる． 特に，パケージ開発に慣れていないと特にそうである． しかし，チェックやテストをすることで，関数の完成度を確実に高めることができるため，パッケージとしてまとめる利点である． 7.2 rvest と RSelenium スクレイピングをするために使われる主なRのパッケージとしては，rvestとRSeleniumがある． rvestは，静的なサイトを対象とするときに役立つ． つまり，URLを指定すれば対象のサイトのページが決まるときである． 気象庁での気象データを提供しているページがこれに当たる． 一方，RSeleniumは動的なサイトを対象とするときに役立つ． 例えば，テキストボックスへのデータ入力やプルダウンメニューの選択あるいはその後のマウス操作でページが遷移する場合である． このような動的なサイトでは，Seleniumだけでなく，Javascriptを部分的に用いるのも効果的である． なお，rvestでもユーザ名とパスワードを用いた一般的なログインは可能である． また，politeパッケージと組み合わせることである程度の動的なサイトのスクレイピングは可能である． 7.3 rvestのできること HTMLの取得 DOMの取得: id, class, tagNameなどを用いる tableの取得 HTML内の取得したいデータはtableにあることが多いため，非常に便利 そもそも，tableでないデータを取得するのは非常に不便 リンクの取得 ページ遷移に使用する stringrと組み合わせて使うと良い 文字コードの変換にはstringiを用いる tidyverseやmagrittrとの合せ技が便利 Formの入力・選択 radioボタンはちょっと工夫が必要 moranajp::html_radio_set() 無理やりな感じではあるが，同一名称のradioボタンを全て同じ値に変更する 本来なら，不要なradioボタンのフォームを削除 可能だが，インデクスがずれるので結構厄介 politeパッケージとの連携 7.4 準備 # install.packages(&quot;rvest&quot;) # library(rvest) 7.5 HTMLの取得 7.5.1 使い方 7.5.2 注意点 7.6 DOMの取得 7.6.1 使い方 7.6.2 注意点 "],["rselenium.html", "Chap. 8 Rselenium 8.1 準備 8.2 ブラウザの自動化 8.3 8.4 要素の取得 8.5 その他", " Chap. 8 Rselenium Seleniumは，ブラウザを使って動的に巡回しつつ，スクレイピングをするのに適している． JavascriptやPHPなどを使って，動的に作成されるサイトでは，URLだけではページを特定することはできない． そのため，rvestだけではデータを取得するのが困難である． 8.1 準備 RSelenium: CRANからインストール Selenium: 本家サイトからインストール 注意: ver3.xxx をインストールする ver4.0 以上はRSeleniumuが対応していない(Pythonなら可) ChromeDriver 注意: 自身の利用しているブラウザのドライバが必要(バージョンも合致する必要あり) GoogleChromeは自動的にupdateされるので，バージョンをよく確認する 通常は，安定版の最新版で大丈夫である Seleniumと同じフォルダに保存する 8.2 ブラウザの自動化 8.3 8.3.1 使い方 8.3.2 注意点 8.4 要素の取得 idがわかるとき document.getElementByID() xpath document.selectQueryAll()[] 動的にサイトが作られているときには，変化する可能性があるので注意 使用されているJavaScriptの関数がわかる script &lt;- “” rem$excute(script) 例 BiSSの文字サイズの変更 主命リストの列数の変更 スクレイピングの実行時には，適切な時間間隔を空ける - 通常は5秒以上を求めていることが多い ページ遷移の命令を送信後，十分な間隔がないとHTMLの要素を取得しきれていないことがある 極端な場合，サーバーからの情報がほとんど何も送られていない，つまりページの内容がほとんど何もないことにある． この状況は，通常のマウス操作では何も表示されていないところをクリックするのと同じ状態である． サーバからの情報を待つ意味でも適度な間隔を空けるのが望ましい 動的なサイトの場合は，HTMLの構成中の可能性もある ログイン等のページでも，遷移途中のことがある． 8.5 その他 Rからシェルのコマンドを使う pngからPDFへ変換 ファイルの移動 Seleniumuの起動・終了 MeCabやGINZAの実行 "],["reticulate.html", "Chap. 9 reticulate 9.1 準備：Pythonのインストール 9.2 準備：Pythonでのモジュール(パッケージ)のインストール 9.3 9.4 実行 9.5 PythoとRとの変数のやり取り", " Chap. 9 reticulate RとPythonのパッケージは，相互に移植されていることが多い． 例えば，Pythonのlogging(とRのfutile.logger)をもとにRのパッケージloggerは開発されている． https://cran.r-project.org/web/packages/logger/index.html また，Rのggplot2やdplyrはPythonにも移植されている． ただし，どちらか片方でしか利用できなかったり，使用方法が難しいことがある． そんなとき，ちょっとだけ使うのであれば，Rのパッケージreticulateが便利である． もちろん，Pythonをちゃんと勉強するのも良いだろう． さらに，reticulateを使うとRとPythonとの変数のやり取りが簡単にできるので，本格的にPythonを使うのにも良さそう． 9.1 準備：Pythonのインストール 9.2 準備：Pythonでのモジュール(パッケージ)のインストール Rstudioでpythonを書く (reticulate) https://qiita.com/Wa__a/items/42129e529cfb6c38e046 py_install()やconda_install()でパッケージがインストールできないとき - pip でパッケージをインストール - pipでインストールできたpythonをreticulate::use_python()で指定 9.3 準備 - Pythonのインストール - pdf2docxのインストール pip install pdf2docx 9.4 実行 # pdf2docxの読み込みでエラーになるとき # reticulate::use_python()でpythonを指定 # pipでpdf2docxがインストールできたpythonを使う library(reticulate) # reticulate::py_install(&quot;pdf2docx&quot;) エラー # https://anaconda.org/conda-forge/python-docx # reticulate::conda_install(channel = &quot;conda-forge&quot;, packages = &quot;python-docx&quot;) # できたけど，pdf2docxは読み込めず reticulate::use_python(&quot;C:/Python/Python39/python.exe&quot;) reticulate::py_run_string(&quot;from pdf2docx import parse&quot;) reticulate::py_run_string(&quot;pdf_file = &#39;D:/a.pdf&#39;&quot;) reticulate::py_run_string(&quot;docx_file = &#39;D:/a.docx&#39;&quot;) reticulate::py_run_string(&quot;parse(pdf_file, docx_file)&quot;) 9.5 PythoとRとの変数のやり取り variableは変数名 # RからPythonへ(Pythonで取り出し) r.variable # PythonからRへ(Rで取り出し) py$variable "],["shell.html", "Chap. 10 shell 10.1 準備 10.2 Pythonのスクリプト実行", " Chap. 10 shell Rからシェルのコマンドを使う ファイルの移動 PDFファイルの結合 pngからPDFへ変換 手作業でも良いが，ファイル数が多かったり，作業回数が多かったりするなら，自動化するのが便利である． 例えば，ファイルの操作やちょっとしたCUIアプリをコマンドでの動作をRでやってしまおうという邪道中の邪道である． 上記の操作をする際は，LinuxやMacであればshellスクリプトとして，Windowsであればバッチファイルとしてコードを書くのが本来の方法である． しかし，shellスクリプトやバッチファイルのコマンドを体系的に勉強したことはない(その意味ではRの勉強もかなり怪しい)． ウェブの情報をもとにしつつ，なんとなくコードを書いたことはある． とはいえ変数の使い方などは特によくわからないので，ちょっとした操作にも時間がかかりそう． そこで，慣れたRを使って雑多な操作をやっつけてしまおうと考えた． 以下のような操作を自動化する． ・複数のフォルダに入ったPDFファイルを1つのPDFに結合 ・結合後のファイルを指定場所に移動 ・元ファイルを削除 なお，以下は基本的にwindowsでの操作を前提としているが，LinuxやMacでも同じあるいは類似のコマンドで代用できる可能性が高い． 日本語文字が入っていると，操作に若干手間がかかることが多い． dosコマンド ls, dir ファイル，ディレクトリの一覧を取得 move, copy, remove, rename ファイルの移動，コピー，削除, リネーム cd ディレクトリの移動 Rの関数 shell(), system() コマンドの実行 setwd() ワーキングディレクトリの設定 ディレクトリ名にスペースや日本語が入っていて，cdコマンドがうまくいかないときは，こっちのほうが便利 paste0() 文字列の結合 stringrの関数 stringiの関数 多くの関数はstringrにラッパーがあるが，文字コードの変換などはstringiの関数が必要 日本語文字を使わなければ不要 ファイル名の命名規則を決めておき，お世話にならない方が幸せ purrr::map() for loopの代わり # ファイル名を取得する関数など その他ツール concatPDF PDFの結合など(win10 OK，win11 NG) # ConcatPDF /outfile Merged.pdf File1.pdf File2.pdf File3.pdf pdftk PDFの結合など(win11 OK) pdftk File1.pdf File2.pdf File3.pdf cat output Merged.pdf ImageMagick 画像変換など 10.1 準備 10.2 Pythonのスクリプト実行 wd &lt;- &quot;D:/matu/work/tmp&quot; setwd(wd) system(&quot;c:/windows/py.exe pdf.py&quot;, intern = TRUE) shell(&quot;pdf.py&quot;) "],["dbi.html", "Chap. 11 DBIでデータ取得 11.1 データベースとの連携 11.2 DBIでできること 11.3 準備 11.4 使い方", " Chap. 11 DBIでデータ取得 11.1 データベースとの連携 リレーショナル・データベースと接続してデータを取得するためのパッケージには色々とある． CRAN Task View: Databases with R には多くのパッケージが掲載されている． https://cran.r-project.org/web/views/Databases.html どれを使っても良いが，よく使われているのはDBIのようだ． https://cran.r-project.org/web/packages/DBI/index.html 11.2 DBIでできること 各種データベースとの接続 SQLによるデータ操作 SQLを使い慣れていれば，SQLで各種の操作をするのが良いだろう． 一方，Rでのデータフレームの操作に慣れていれば，取得したデータをRで操作するのが良い． つまり，データ取得だけにDBIを利用して，その後はdplyrやtidyverseの各種パッケージの関数を駆使してデータを処理する． さらに，その結果を図示したい場合は，ggplot2を使うと良い． 11.3 準備 install.packages(c(&quot;DBI&quot;, &quot;RSQLite&quot;)) ## package &#39;DBI&#39; successfully unpacked and MD5 sums checked ## package &#39;RSQLite&#39; successfully unpacked and MD5 sums checked ## ## The downloaded binary packages are in ## C:\\Users\\matu\\AppData\\Local\\Temp\\RtmpABo479\\downloaded_packages library(DBI) library(RSQLite) library(tidyverse) ## ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr 1.1.1 ✔ readr 2.1.4 ## ✔ forcats 1.0.0 ✔ stringr 1.5.0 ## ✔ ggplot2 3.4.1 ✔ tibble 3.2.1 ## ✔ lubridate 1.9.2 ✔ tidyr 1.3.0 ## ✔ purrr 1.0.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag() masks stats::lag() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors # 一時的データの準備 con &lt;- dbConnect(RSQLite::SQLite(), dbname = &quot;:memory:&quot;) dbWriteTable(con, &quot;mpg&quot;, mpg) dbListTables(con) ## [1] &quot;mpg&quot; 11.4 使い方 # SQLで選択・フィルタ res &lt;- dbSendQuery(con, &quot;SELECT year, model, displ, cyl FROM mpg WHERE cyl = 4&quot;) df &lt;- dbFetch(res) dbClearResult(res) tibble::tibble(df) ## # A tibble: 81 × 4 ## year model displ cyl ## &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; ## 1 1999 a4 1.8 4 ## 2 1999 a4 1.8 4 ## 3 2008 a4 2 4 ## 4 2008 a4 2 4 ## 5 1999 a4 quattro 1.8 4 ## 6 1999 a4 quattro 1.8 4 ## 7 2008 a4 quattro 2 4 ## 8 2008 a4 quattro 2 4 ## 9 1999 malibu 2.4 4 ## 10 2008 malibu 2.4 4 ## # ℹ 71 more rows # とりあえず全部取得してから，dplyrで選択・フィルタ res &lt;- dbSendQuery(con, &quot;SELECT * FROM mpg&quot;) df &lt;- dbFetch(res) dbClearResult(res) df %&gt;% tibble::as_tibble() %&gt;% print() %&gt;% dplyr::select(year, model, displ, cyl) %&gt;% dplyr::filter(cyl == 4) ## # A tibble: 234 × 11 ## manufacturer model displ year cyl trans drv cty hwy fl class ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; ## 1 audi a4 1.8 1999 4 auto… f 18 29 p comp… ## 2 audi a4 1.8 1999 4 manu… f 21 29 p comp… ## 3 audi a4 2 2008 4 manu… f 20 31 p comp… ## 4 audi a4 2 2008 4 auto… f 21 30 p comp… ## 5 audi a4 2.8 1999 6 auto… f 16 26 p comp… ## 6 audi a4 2.8 1999 6 manu… f 18 26 p comp… ## 7 audi a4 3.1 2008 6 auto… f 18 27 p comp… ## 8 audi a4 quattro 1.8 1999 4 manu… 4 18 26 p comp… ## 9 audi a4 quattro 1.8 1999 4 auto… 4 16 25 p comp… ## 10 audi a4 quattro 2 2008 4 manu… 4 20 28 p comp… ## # ℹ 224 more rows ## # A tibble: 81 × 4 ## year model displ cyl ## &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;int&gt; ## 1 1999 a4 1.8 4 ## 2 1999 a4 1.8 4 ## 3 2008 a4 2 4 ## 4 2008 a4 2 4 ## 5 1999 a4 quattro 1.8 4 ## 6 1999 a4 quattro 1.8 4 ## 7 2008 a4 quattro 2 4 ## 8 2008 a4 quattro 2 4 ## 9 1999 malibu 2.4 4 ## 10 2008 malibu 2.4 4 ## # ℹ 71 more rows その他の詳細は以下を参照． https://cran.r-project.org/web/packages/DBI/vignettes/DBI-1.html "],["xlsx.html", "Chap. 12 xlsxでエクセル操作 12.1 オートフィルタの設定とウィンドウ枠の固定の自動化スクリプト 12.2 その他の操作(未作成)", " Chap. 12 xlsxでエクセル操作 xlsxパッケージを使うと，エクセルのファイルの読み込み・書き込みをはじめ， オートフィルタの設定やウィンドウ枠の固定などの各種操作が可能である． 12.1 オートフィルタの設定とウィンドウ枠の固定の自動化スクリプト xlsxの使用例として，オートフィルタを設定して・ウィンドウ枠を固定する自動化スクリプトを作成した． 12.1.1 使用方法 準備：Rのインストール 準備：set_autofilter_freezepanel.rsc をダウンロード(右クリックして「名前を付けてリンク先を保存」)して，任意のフォルダに保存． 準備：スクリプトの関連付けを参考にして，「.rsc」を「Rscript.exe」に関連付けする(Windowsの場合)．Macの場合は，Mac - 拡張子に関連付けられているアプリを変更する方法などを参考にしてほしい． set_autofilter_freezepanel.rsc と同じフォルダに，処理したいエクセルのファイルを保存． 実行前のエクセルのファイル set_autofilter_freezepanel.rsc をダブルクリックして実行すると，黒い画面が表示されてプログラムが実行される． プログラムが自動的にエクセルのファイルの1行目のA列からZ列までにオートフィルタを設定し，1行目と1列目でウィンドウ枠を固定する． 複数ファイル・複数シートにも対応している． なお，初回実行時は，xlsxパケージのダウンロードのため，少し時間がかかるかもしれない． 2回目以降はファイル数が多すぎなければ，一瞬で処理されるはず． 実行後のエクセルのファイル 12.1.2 スクリプトの内容説明 # Package, 準備 if(! &quot;xlsx&quot; %in% installed.packages()[,1]){ # xlsxパッケージ有無の確認 # パッケージが無い場合 options(repos = &quot;https://cran.ism.ac.jp/&quot;) # ミラーサイトの設定 install.packages(&quot;xlsx&quot;) # パッケージのインストール } # Functions, 関数 # 註：xlsxパッケージの関数は返り値の代入がない # 副作用でシートなどを操作するため? # 参照型を使っているため? # 参考：通常のRの関数は，返り値の代入をすることが多いの # オートフィルタの設定 set_auto_filter &lt;- function(sh){ # A1からZ1までを設定 # もっと多くの列で設定したければ，&quot;A1:Z1&quot;のところを修正する xlsx::addAutoFilter(sh, &quot;A1:Z1&quot;) } # ウィンドウ枠の固定 set_freeze_panel &lt;- function(sh){ # 1列目と1行目のウィンドウ枠を固定 # 固定する場所の変更方法 # 2行目までを固定したい場合は，引数の2つ目と4つ目を，3にする # 3列目までを固定したい場合は，引数の3つ目と5つ目を，4にする xlsx::createFreezePane(sh, 2, 2, 2, 2) } # ワークブックごとで設定 set_af_fp &lt;- function(file){ wb &lt;- xlsx::loadWorkbook(file) # ワークブックの読み込み for(sh in xlsx::getSheets(wb)){ # シートの数だけ繰り返し set_auto_filter(sh) # オートフィルタの設定 set_freeze_panel(sh) # ウィンドウ枠の固定 } xlsx::saveWorkbook(wb, file) # ワークブクの保存 } # Main, 本体 files &lt;- list.files(pattern = &quot;xls&quot;) # &quot;.xls&quot;と&quot;xlsx&quot;の一覧取得 for(file in files){ # ファイルの数だけ繰り返し set_af_fp(file) # set_af_fp()の実行 } 12.2 その他の操作(未作成) "],["qpdf.html", "Chap. 13 qpdfでPDF操作 13.1 関数一覧", " Chap. 13 qpdfでPDF操作 13.1 関数一覧 library(qpdf) # ページ数取得，show the number of pages in a pdf pdf_length(input, password = &quot;&quot;) # 1ページごとに分割，split a single pdf into separate files, one for each page pdf_split(input, output = NULL, password = &quot;&quot;) # 指定ページを抽出，create a new pdf with a subset of the input pages pdf_subset(input, pages = 1, output = NULL, password = &quot;&quot;) # 結合，join several pdf files into one pdf_combine(input, output = NULL, password = &quot;&quot;) # 圧縮，compress or linearize a pdf file pdf_compress(input, output = NULL, linearize = FALSE, password = &quot;&quot;) # ページ回転，rotate selected pages pdf_rotate_pages(input, pages, angle = 90, relative = FALSE, output = NULL, password = &quot;&quot;) # 重ね合わせ pdf_overlay_stamp(input, stamp, output = NULL, password = &quot;&quot;) input &lt;- &quot;&quot; pdf_split(input, output = &quot;d:/&quot;, password = &quot;&quot;) "],["pdf2docx.html", "Chap. 14 pdfをdocxに変換 14.1 RDCOMClient 14.2 pdf2docx", " Chap. 14 pdfをdocxに変換 14.1 RDCOMClient https://github.com/omegahat/RDCOMClient CRANにはないが， 14.1.1 インストール install.packages(&quot;RDCOMClient&quot;, repos = &quot;http://www.omegahat.net/R&quot;, type = &quot;win.binary&quot;) 14.1.2 変換実行 https://stackoverflow.com/questions/32846741/convert-pdf-file-to-docx/73720411#73720411 library(RDCOMClient) wordApp &lt;- COMCreate(&quot;Word.Application&quot;) wordApp[[&quot;Visible&quot;]] &lt;- TRUE wordApp[[&quot;DisplayAlerts&quot;]] &lt;- FALSE path_To_PDF_File &lt;- &quot;xxx.pdf&quot; path_To_Word_File &lt;- &quot;xxx.docx&quot; doc &lt;- wordApp[[&quot;Documents&quot;]]$Open(normalizePath(path_To_PDF_File), ConfirmConversions = FALSE) doc$SaveAs2(path_To_Word_File) 14.1.3 ラッパー関数 library(RDCOMClient) pdf2docx &lt;- function(pdf, docx = NULL){ if(is.null(docx)){ docx &lt;- paste0(getwd(), sub(&quot;pdf&quot;, &quot;docx&quot;, pdf)) } wordApp &lt;- RDCOMClient::COMCreate(&quot;Word.Application&quot;) wordApp[[&quot;Visible&quot;]] &lt;- TRUE wordApp[[&quot;DisplayAlerts&quot;]] &lt;- FALSE doc &lt;- wordApp[[&quot;Documents&quot;]]$Open(normalizePath(pdf), ConfirmConversions = FALSE) doc$SaveAs2(docx) doc$close() } wd &lt;- &quot;d:/matu/work/tmp/&quot; setwd(wd) path_docx &lt;- function(path_pdf){ if(grepl(&quot;[A-z]:&quot;, path_pdf)){ return(sub(&quot;pdf&quot;, &quot;docx&quot;, path_pdf)) } path &lt;- file.path(getwd(), sub(&quot;pdf&quot;, &quot;docx&quot;, path_pdf)) return(sub(&quot;//&quot;, &quot;/&quot;, path)) } testthat::expect_equal(path_docx(&quot;a.pdf&quot; ), &quot;d:/matu/work/tmp/a.docx&quot; ) testthat::expect_equal(path_docx(&quot;d:/matu/work/tmp/a.pdf&quot;), &quot;d:/matu/work/tmp/a.docx&quot; ) testthat::expect_equal(path_docx(&quot;test/a.pdf&quot; ), &quot;d:/matu/work/tmp/test/a.docx&quot;) testthat::expect_equal(path_docx(&quot;/test/a.pdf&quot; ), &quot;d:/matu/work/tmp/test/a.docx&quot;) wd &lt;- &quot;d:/&quot; setwd(wd) pdf2docx(&quot;a.pdf&quot;) 14.2 pdf2docx "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
