<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r on matutosi</title>
    <link>https://matutosi.github.io/categories/r/</link>
    <description>Recent content in r on matutosi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp-jp</language>
    <lastBuildDate>Fri, 22 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://matutosi.github.io/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>消える画像のスクリーンショット</title>
      <link>https://matutosi.github.io/post/20250822/</link>
      <pubDate>Fri, 22 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250822/</guid>
      <description>Windowsで[PrtSc]キーを押したときに出てくる「四角形」とか「ウィンドウ」とかを選ぶウィンドウの画像を使いたいと思った． この画面を撮影しようとすると，消えてしまってうまくいかない．
[20250822_screenshot_icon.png]
そこで，screenshotパッケージで使っている screenshot.exe とcmdでのスリープを活用して撮影することにした．
 https://matutosi.github.io/screenshot/  REM screenshot.bat REM Windowsでスクリーンショット画像を撮影するときに出てくる画像のスクリーンショットを撮影する方法 REM 普通なら，スクリーンショットを撮影するときに消えてしまうので，うまくいかない REM cmd timeout でスリープさせている間に，スクリーンショットの画像を出して REM screenshot パッケージの実行ファイル(screenshot.exe)でスクリーンショットをとる timeout 10 REM 10秒スリープ：時間が短いときは適宜増やす screenshot.exe screenshot_icon.png  screenshot.exe のファイルのあるディレクトリに上のコードを screenshot.bat という名前で保存する screenshot.bat の起動する [PrtSc]を押してスクリーンショットを撮影したい画面にする しばし待機する screenshot_icon.png という画像が保存される  </description>
    </item>
    
    <item>
      <title>だいぶ前に書いたRの記事</title>
      <link>https://matutosi.github.io/post/20250821/</link>
      <pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250821/</guid>
      <description>学会とかで「あのRの松村さんですか?」と言われたときは，研究よりもRの方を覚えられていて昔は残念な気がした． 今は全然気にしていないというか，そうだろうねという感じ．
植生情報に書いていたRの記事を読んで参考にしたと，最近頂いたメールにあった． そこで，だいぶ前に書いたRの記事を researchmap からダウンロードできるようにした．
 https://researchmap.jp/read0142280/misc  個別の記事
 植生研究でのRパッケージtidyverse使用のすすめ https://researchmap.jp/read0142280/misc/50896498/attachment_file.pdf Rを使ったシミュレーション(後編) https://researchmap.jp/read0142280/misc/16859770/attachment_file.pdf Rを使ったシミュレーション(前編) https://researchmap.jp/read0142280/misc/19714842/attachment_file.pdf Rを使った植生資料の解析(入門編) https://researchmap.jp/read0142280/misc/9202619/attachment_file.pdf  </description>
    </item>
    
    <item>
      <title>書籍の紹介記事</title>
      <link>https://matutosi.github.io/post/20250820/</link>
      <pubDate>Wed, 20 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250820/</guid>
      <description>『Rによる自動化・効率化レシピ集』の紹介記事を編集者の方が作成してくださった． 書籍のはじめにの部分が紹介されています．
 https://note.com/morikita/n/n91cc7dc150af  </description>
    </item>
    
    <item>
      <title>Rによる自動化・効率化レシピ集</title>
      <link>https://matutosi.github.io/post/20250716/</link>
      <pubDate>Wed, 16 Jul 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250716/</guid>
      <description>森北出版から「Rによる自動化・効率化レシピ集」のページができていた． 結構時間がかかってしまった．
 https://www.morikita.co.jp/books/mid/085831 https://www.amazon.co.jp/dp/4627858310/  </description>
    </item>
    
    <item>
      <title>pivoteaとpivoteapy</title>
      <link>https://matutosi.github.io/post/20250224/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250224/</guid>
      <description>pivoteaのPythonの関数自体はできてきた．
せっかくなので，Pythonの環境がなくても実行できるように，TkEasyGUIとPyinstallerを使ってexeにする予定．</description>
    </item>
    
    <item>
      <title>pivoteaとpivoteapy</title>
      <link>https://matutosi.github.io/post/20250220/</link>
      <pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250220/</guid>
      <description>pivoteaというRのパッケージをPythonに変換している． Geminiに相談してコードを変換したが，やはりそのままでは駄目で，エラーがでる． でも，Pythonにも少し慣れてきたので，ちょっとずつデバグしていったら，それなりには動くものになってきた． うまくできたら，&amp;ldquo;pivoteapy&amp;quot;として公開できるかもしれない．
Pythonののパッケージとしてまとめるだけでなく，さらにPythonからRに戻すと，言語の翻訳と同じでRのコードが簡潔になるような気がする．
例：不自然な英語 &amp;ndash;(AIで翻訳)&amp;ndash;&amp;gt; 他の言語 &amp;ndash;(AIで翻訳)&amp;ndash;&amp;gt; 自然な言語
Geminiにリファクタリングを頼むのとどちらがきれいなコードになるのか試してみよう．
 https://cran.r-project.org/web/packages/pivotea/index.html  </description>
    </item>
    
    <item>
      <title>タイトル</title>
      <link>https://matutosi.github.io/post/20259999/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20259999/</guid>
      <description>文章
 https://github.com/matutosi/  </description>
    </item>
    
  </channel>
</rss>
