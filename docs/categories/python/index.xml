<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on matutosi</title>
    <link>https://matutosi.github.io/categories/python/</link>
    <description>Recent content in python on matutosi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp-jp</language>
    <lastBuildDate>Thu, 13 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://matutosi.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pivoteapy</title>
      <link>https://matutosi.github.io/post/20250313/</link>
      <pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250313/</guid>
      <description>時間割などのような文字列のピボットテーブルをするために，pivoteaというパッケージをRで作った．
また，それをもとにしたwebアプリも作った．
最近はPythonを勉強しているので，練習を兼ねてpython版を作成している． しっかりしたライブラリにまとめるにはかなりの時間がかかるが，基本的な動作自体はだいたいできてきた．</description>
    </item>
    
    <item>
      <title>週間の縦型カレンダーを生成するアプリ</title>
      <link>https://matutosi.github.io/post/20250308/</link>
      <pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250308/</guid>
      <description>カレンダーは毎年週間の縦型のもので，自作のものを使っている． 市販品ではメモ欄が一番左にあるが，自分の好みである一番右にしている． また，定型の予定は事前にプログラムで書き込んでいた． 最近，Pythonを勉強しているので，TeX版をPythonに書き直した． だいたい求めるものができた．
さらに，streamlitというwebアプリ作成のライブラリがあるので，web版にしてみた． 個人の好みはそれぞれなので，1月始まり・4月始まり，レイアウトの左寄せ・右寄せ，日曜日・月曜日始まり，1日の開始・終了時刻はweb版ではカスタマイズできるようにした．
定型の予定は以下の形式のエクセルファイルを作れば，繰り返してくれる．
   period_start period_end week_of_day event_start event_end event except     2025-04-10 2025-07-10 wed 10:30 12:00 数学 2025-05-07;2025-05-14   2025-04-10 2025-07-10 mon 12:30 12:30 開始のみの予定     定型予定のファイルの詳細は以下を参照してほしい． コードもすべて公開している．
使い方は，なんとなくわかりそうだとは思う． でも，説明はまだ全然なので今後整理していこう．</description>
    </item>
    
    <item>
      <title>pivoteaとpivoteapy</title>
      <link>https://matutosi.github.io/post/20250224/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250224/</guid>
      <description>pivoteaのPythonの関数自体はできてきた．
せっかくなので，Pythonの環境がなくても実行できるように，TkEasyGUIとPyinstallerを使ってexeにする予定．</description>
    </item>
    
    <item>
      <title>pivoteaとpivoteapy</title>
      <link>https://matutosi.github.io/post/20250220/</link>
      <pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250220/</guid>
      <description>pivoteaというRのパッケージをPythonに変換している． Geminiに相談してコードを変換したが，やはりそのままでは駄目で，エラーがでる． でも，Pythonにも少し慣れてきたので，ちょっとずつデバグしていったら，それなりには動くものになってきた． うまくできたら，&amp;ldquo;pivoteapy&amp;quot;として公開できるかもしれない．
Pythonののパッケージとしてまとめるだけでなく，さらにPythonからRに戻すと，言語の翻訳と同じでRのコードが簡潔になるような気がする．
例：不自然な英語 &amp;ndash;(AIで翻訳)&amp;ndash;&amp;gt; 他の言語 &amp;ndash;(AIで翻訳)&amp;ndash;&amp;gt; 自然な言語
Geminiにリファクタリングを頼むのとどちらがきれいなコードになるのか試してみよう．
https://cran.r-project.org/web/packages/pivotea/index.html</description>
    </item>
    
    <item>
      <title>easypdf</title>
      <link>https://matutosi.github.io/post/20250218/</link>
      <pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate>
      
      <guid>https://matutosi.github.io/post/20250218/</guid>
      <description>easypdfでPDFの文字列を強調表示するものを作成した．
https://github.com/matutosi/easypdf</description>
    </item>
    
  </channel>
</rss>
